
"""
Django settings for FashionState project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sb=tn_25%*a1j$+g6n!wdhpj%m*^%1nkiadupq)1(il4!8hgg!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['fashionstate.onrender.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sales',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'sales.middleware.RetailerLoginMiddleware',
]

ROOT_URLCONF = 'FashionState.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FashionState.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # Use the PostgreSQL backend
        'NAME': 'bipul007',                # The name of your database
        'USER': 'bipul007_user',              # Your database user
        'PASSWORD': 'EW4DT38qRVPOUTTvGJ6m7M9sXMPRxevI',               # Your database password
        'HOST': 'dpg-cqnpf2dsvqrc73fq4qk0-a.oregon-postgres.render.com',                       # The hostname of the PostgreSQL server
        'PORT': '5432',                            # The port your PostgreSQL server is running on
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',  # Use the PostgreSQL backend
#         'NAME': 'Fashionstate',                # The name of your database
#         'USER': 'postgres',              # Your database user
#         'PASSWORD': 'bipul123',               # Your database password
#         'HOST': 'localhost',                       # The hostname of the PostgreSQL server
#         'PORT': '5432',                            # The port your PostgreSQL server is running on
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     BASE_DIR / 'static',
# ]


# # settings.py
# import os

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# # Static files (CSS, JavaScript, Images)
# STATIC_URL = '/static/'

# # Ensure the STATICFILES_DIRS is set correctly
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'sales', 'static'),
# ]

# # Set the STATIC_ROOT to a directory where static files will be collected
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#new
# settings.py

import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'https://imarobot00.github.io/staticfiles/'

# Ensure the STATICFILES_DIRS is set correctly for development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'sales', 'static'),
]

# Set the STATIC_ROOT to a directory where static files will be collected
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#new

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'submit_login' #URL to redirect for LOGIN


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'sales.backend.CustomAuthBackend',
)

# Session settings
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expire the session when the browser is closed
SESSION_COOKIE_AGE = 1209600  # Set the session age to two weeks (in seconds)
SESSION_SAVE_EVERY_REQUEST = True  # Save the session to the database on every request
